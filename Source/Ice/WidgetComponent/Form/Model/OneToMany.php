<?php
/**
 * Created by PhpStorm.
 * User: dp
 * Date: 18.04.16
 * Time: 12:48
 */

namespace Ice\WidgetComponent;


use Ice\Core\Debuger;
use Ice\Core\Model;

class Form_Model_OneToMany extends FormElement_Typehead
{
    private $itemModel = null;
    private $modelAutoCreate = null;

    /**
     * WidgetComponent config
     *
     * @return array
     */
    protected static function config()
    {
        return [
            'render' => ['template' => FormElement_Typehead::class, 'class' => 'Ice:Php', 'layout' => null, 'resource' => null],
            'access' => ['roles' => [], 'request' => null, 'env' => null, 'message' => 'WidgetComponent: Access denied!'],
            'cache' => ['ttl' => -1, 'count' => 1000],
        ];
    }

    /**
     * @return null
     */
    public function getItemModel()
    {
        return $this->setItemModel($this->getOption('itemModel'));
    }

    /**
     * @param Model $itemModel
     * @return Model
     */
    public function setItemModel($itemModel)
    {
        return $this->itemModel = $itemModel;
    }

    public function getItemId()
    {
        /** @var Model $modelClass */
        $modelClass = $this->getItemModel();

        return $this->setItemId($modelClass::getPkFieldName());
    }


    public function getItems()
    {
        /** @var Model $modelClass */
        $modelClass = $this->getItemModel();

        $this->setOption(
            'rows',
            $modelClass::getSelectQuery([$this->getItemId(), $this->getItemTitle()])->getRows()
        );

        return parent::getItems(); // TODO: Change the autogenerated stub
    }

    /**
     * @return null
     */
    public function getModelAutoCreate()
    {
        return $this->setModelAutoCreate($this->getOption('itemAutoCreate', false));
    }

    /**
     * @param boolean $modelAutoCreate
     * @return bool
     */
    public function setModelAutoCreate($modelAutoCreate)
    {
        return $this->modelAutoCreate = $modelAutoCreate;
    }

    protected function buildParams($values)
    {
        parent::buildParams($values);

        $name = $this->getName();
        $typeahead = $this->getName() . '_typeahead';

        $nameValue = $this->get($this->getName());
        $typeaheadValue = $this->get($this->getName() . '_typeahead');

        /** @var Model $modelClass */
        $modelClass = $this->getItemModel();

        $nameModel = $modelClass::getModel($nameValue, [$modelClass::getPkFieldName(), $this->getItemTitle()]);
        $typeaheadModel = $modelClass::getSelectQuery([$modelClass::getPkFieldName(), $this->getItemTitle()], [$this->getItemTitle() => $typeaheadValue])->getModel();


        if ($nameModel) {
            if ($typeaheadModel) {
                if ($nameModel->getPkValue() != $typeaheadModel->getPkValue()) {
                    $this->set($name, $typeaheadModel->getPkValue());
                }
            } else {
                $this->set($typeahead, $nameModel->get($this->getItemTitle()));
            }
        } else {
            if ($typeaheadModel) {
                $this->set($name, $typeaheadModel->getPkValue());
            } else {
                $this->set($name, 0);
            }
        }
    }
}